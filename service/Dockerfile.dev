# Use cargo-chef to share dependency layers between builds
FROM lukemathwalker/cargo-chef:latest-rust-1.86 AS chef

WORKDIR /usr/src/app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS cacher
COPY --from=planner /usr/src/app/recipe.json recipe.json
RUN cargo chef cook --recipe-path recipe.json

FROM rust:1.86 AS builder

WORKDIR /usr/src/app
ENV CARGO_HOME=/usr/local/cargo
ENV CARGO_TARGET_DIR=/usr/src/app/target

COPY --from=cacher /usr/src/app/target target
COPY --from=cacher /usr/local/cargo /usr/local/cargo
COPY . .

ENV SQLX_OFFLINE=true
RUN cargo install sqlx-cli --locked --features postgres
RUN if ! cargo install cargo-watch --locked; then cargo install cargo-watch; fi
RUN cargo sqlx prepare --check
RUN rustup component add llvm-tools-preview
RUN cargo install --locked cargo-llvm-cov cargo2junit
RUN sh -ec 'cargo build --bin tinycongress-api && install -m 0755 target/debug/tinycongress-api /usr/local/bin/tinycongress-api'

RUN install -m 0755 bin/dev-entrypoint.sh /usr/local/bin/dev-entrypoint
RUN install -m 0755 bin/run-coverage-tests.sh /usr/local/bin/run-coverage-tests

# Precompile test binaries so CI containers can run them without rebuilding dependencies
RUN cargo test --no-run
RUN cargo llvm-cov --no-run --tests

ENV PATH="/usr/local/cargo/bin:${PATH}"

# Default command: run the hot-reload dev entrypoint
CMD ["/usr/local/bin/dev-entrypoint"]
