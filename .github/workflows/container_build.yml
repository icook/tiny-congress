name: container build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-images:
    name: Build ${{ matrix.image }} image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: tc-api-dev
            context: ./service
            dockerfile: service/Dockerfile.dev
          - image: tc-ui-dev
            context: ./web
            dockerfile: web/Dockerfile.dev
          - image: postgres
            context: .
            dockerfile: dockerfiles/Dockerfile.postgres
    env:
      REGISTRY: ghcr.io/${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute branch slug
        id: meta
        run: |
          ref="${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}"
          branch="${ref//[^a-zA-Z0-9_.-]/-}"
          branch="${branch,,}"
          echo "branch_slug=${branch}" >> "$GITHUB_OUTPUT"

      - name: Build & push ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          tags: |
            ${{ env.REGISTRY }}/${{ matrix.image }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ matrix.image }}:branch-${{ steps.meta.outputs.branch_slug }}
          cache-from: |
            type=gha,scope=${{ matrix.image }}
            type=gha,scope=${{ matrix.image }}-sccache
            type=registry,ref=${{ env.REGISTRY }}/${{ matrix.image }}:cache
          cache-to: |
            type=gha,scope=${{ matrix.image }},mode=max
            type=gha,scope=${{ matrix.image }}-sccache,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ matrix.image }}:cache,mode=max
